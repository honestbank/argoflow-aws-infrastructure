# This GitHub Action should be located at https://github.com/honestbank/gitops-library/blob/main/github/actions/terraform.yml
# When making any changes, please submit a PR to the file/repo above as well.
#
# Required variables/secrets:
# TF_API_TOKEN: Terraform Cloud API token
#
# Optional variables (add under `env:` if needed):
# TF_WORKSPACE: The Terraform Cloud workspace suffix (usually the stage/environment - eg test, dev, qa, prod)

name: "Terraform GitHub Actions"
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
env:
  tf_version: "latest"
  tf_working_dir: "."
jobs:
  terraform:
    name: "Terraform - Format, Init, Validate, Plan, Fail on Change"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          submodules: true
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Format
        id: fmt
        run: terraform fmt
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
      - name: PR Comment
        uses: actions/github-script@v4
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Release
        if: github.event_name == 'push' && github.base_ref == 'main'
        uses: cycjimmy/semantic-release-action@v2
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          extra_plugins: |
            @semantic-release/git@7.0.18
            @semantic-release/exec@3.3.8
            @semantic-release/changelog@3.0.0
